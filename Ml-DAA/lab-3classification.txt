import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

df=pd.read_csv('Admission_Predict.csv')
df.columns
df.head()

from sklearn.preprocessing import Binarizer
bi=Binarizer(threshold=0.75)
df['Chance of Admit '] = bi.fit_transform(df[['Chance of Admit ' ]])

x =df.drop('Chance of Admit ',axis = 1)
y=df['Chance of Admit ']

x

y=y.astype('int')
sns.countplot(x = y);

y.value_counts()

#cross validation
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(
x,y,random_state=0,test_size =0.25)
x_train.shape
x_test

#import class of decision tree
from sklearn.tree import DecisionTreeClassifier
classifier = DecisionTreeClassifier(random_state=0)
classifier.fit(x_train,y_train)
y_pred = classifier.predict(x_test)

result = pd.DataFrame({
    'actual' : y_test,
    'predicted' : y_pred
})

ConfusionMatrixDisplay.from_predictions(y_test,y_pred)
accuracy_score(y_test,y_pred)
print(classification_report(y_test,y_pred))


from sklearn.tree import plot_tree
plt.figure(figsize=(15,15))
plot_tree(classifier, fontsize=8 ,filled=True, rounded= True,
         feature_names=x.columns, class_names=['NA','AD']);















